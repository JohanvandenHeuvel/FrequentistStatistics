x = c(6,4,3)
y = c(5,3,7)
z = c(9,3,4)
test = matrix(c(x,y,z), byrow = FALSE, nrow = 3, dimnames = list(c(1,2,3),c('x','y','z')) )
test
x <- c(4,5,1)
barplot(x)
x <- c(4,5,1)
names(x) <- c("1","2","3")
barplot(x)
x <- c(4,5,1)
names(x) <- c("1","2","3")
plot(x)
View(test)
countour(test)
x = c(6,4,3)
y = c(5,3,7)
z = c(9,3,4)
test = matrix(c(x,y,z), byrow = FALSE, nrow = 3, dimnames = list(c(1,2,3),c('x','y','z')) )
contour(test)
persp(test)
persp(test, expand 0.2)
persp(test, expand=0.2)
persp(volcano, expand=0.2)
library(ggplot2)
library(car)
library(effects)
install.packages("effects")
library(effects)
setwd("~/Documents/RU/Sem2/Statistics/Week8")
child_aggression <- read.table("ChildAggression.csv",sep="\t",header=T,comment.char="",quote="")
head(child_aggression)
?lm
linearModel <- lm(Agression~Television+Computer_Games+Sibling_Aggression+Diet+Parenting_Style+Sleep_Quality)
linearModel <- lm(Aggression~Television+Computer_Games+Sibling_Aggression+Diet+Parenting_Style+Sleep_Quality)
linearModel <- lm(Aggression~Television+Computer_Games+Sibling_Aggression+Diet+Parenting_Style+Sleep_Quality, data=child_aggression)
summary(linearModel)
vif(linearModel)
cor(child_aggression[,1:7])
vif(linearModel)
x = 1.438418+1.134738+1.132962+1.163737+1.497402+1.016403
x = x/6
x
durbinWatsonTest(linearModel)
par(mfrow=c(2,2))
plot(linearModel)
par(mar=c(2,2,2,2))
plot(linearModel)
par(mar=c(1,1,1,1))
plot(linearModel)
drop1(linearModel, test="F")
linearModel <- lm(Aggression~Television+Computer_Games+Sibling_Aggression+Diet+Parenting_Style, data=child_aggression)
summary(linearModel)
linearModel <- lm(Aggression~Television+Computer_Games+Sibling_Aggression+Diet+Parenting_Style+Sleep_Quality, data=child_aggression)
summary(linearModel)
linearModel <- lm(Aggression~Television+Computer_Games+Sibling_Aggression+Diet+Parenting_Style, data=child_aggression)
summary(linearModel)
drop1(linearModel, test="F")
linearModel <- lm(Aggression~Computer_Games+Sibling_Aggression+Diet+Parenting_Style, data=child_aggression)
summary(linearModel)
linearModel <- lm(Aggression~Computer_Games+Sibling_Aggression+Diet+Parenting_Style, data=child_aggression)
summary(linearModel)
drop1(linearModel, test="F")
supermodel <- read.table("Supermodel.dat",sep="\t",header=T,comment.char="",quote="")
head(supermodel)
linearModel <- lm(salary~age + years + beauty)
linearModel <- lm(salary~age + years + beauty, data=supermodel)
summary(linearModel)
durbinWatsonTest(linearModel) #dw-test return no significant autocorrelation
par(mfrow=c(2,2))
par(mar=c(1,1,1,1))
plot(linearModel)
vif(linearModel) #avg=1.23061
cor(supermodel[,1:4])
linearModel <- lm(Aggresssion~Computer_Games + Parenting_Style, data=child_aggression)
linearModel <- lm(Aggression~Computer_Games + Parenting_Style, data=child_aggression)
child_aggression <- read.table("ChildAggression.csv",sep="\t",header=T,comment.char="",quote="")
head(child_aggression)
linearModel <- lm(Aggression~Television+Computer_Games+Sibling_Aggression+Diet+Parenting_Style+Sleep_Quality, data=child_aggression)
summary(linearModel)
vif(linearModel) #avg=1.23061
cor(child_aggression[,1:7])
durbinWatsonTest(linearModel) #dw-test return no significant autocorrelation
par(mfrow=c(2,2))
par(mar=c(1,1,1,1))
plot(linearModel)
drop1(linearModel, test="F")
linearModel <- lm(Aggression~Television+Computer_Games+Sibling_Aggression+Diet+Parenting_Style, data=child_aggression)
summary(linearModel)
drop1(linearModel, test="F")
linearModel <- lm(Aggression~Computer_Games+Sibling_Aggression+Diet+Parenting_Style, data=child_aggression)
summary(linearModel)
babyskin <- read.table("babyskin.csv",sep="\t",header=T,comment.char="",quote="")
head(babyskin)
linearModel <- lm(Orangeness~Carrots, data=babyskin)
summary(linearModel)
durbinWatsonTest(linearModel) #dw-test return no significant autocorrelation
library(car)
library(ggplot2)
durbinWatsonTest(linearModel) #dw-test return no significant autocorrelation
par(mfrow=c(2,2))
par(mar=c(1,1,1,1))
plot(linearModel)
vif(linearModel) #age & years > 10
ggplot(babyskin, aes(Carrots, Orangeness)) + geom_point()
sales_data <- read.table("sales_over_times.csv",sep="\t",header=T,comment.char="",quote="")
head(sales_data)
ggplot(sales_data, aes(TIME,SALES)) + geom_point() + geom_smooth(method="lm")
model_1 <- lm(SALES~TIME, data=sales_data)
summary(model_1)
model_2 <- lm(SALES~poly(TIME,2), data=sales_data)
summary(model_2)
predict(model_2, newdata=data.frame(TIME=c(10,20,30)))
sales_data$PREDICTED_SALES <- predict(model_2)
head(sales_data)
ggplot(sales_data, aes(TIME, SALES)) + geom_point() + geom_smooth(method="lm") + geom_line(aes(TIME,PREDICTED_SALES), colour="red")
model_2 <- lm(Orangeness~poly(Carrots,2), data=babyskin)
summary(model_2)
predict(model_2, newdata=data.frame(Carrots=c(10,20,30)))
babyskin$predicted_Orangeness <- predict(model_2)
head(babyskin)
model_2 <- lm(Orangeness~poly(Carrots,2), data=babyskin)
summary(model_2)
predict(model_2, newdata=data.frame(Carrots=c(10,20,30)))
babyskin$predicted_Orangeness <- predict(model_2)
head(babyskin)
ggplot(babyskin, aes(Carrots, Orangeness)) + geom_point() + geom_smooth(method="lm") + geom_line(aes(Carrots,predicted_Orangeness), colour="red")
healing <- read.table("healing.csv",sep="\t",header=T,comment.char="",quote="")
head(healing)
linearModel <- lm(healing_rate~age, data=healing)
summary(linearModel)
ggplot(healing, aes(age, healing_rate)) + geom_point()
durbinWatsonTest(linearModel) #dw-test return no significant autocorrelation
par(mfrow=c(2,2))
par(mar=c(1,1,1,1))
plot(linearModel)
ggplot(healing, aes(age, healing_rate)) + geom_point()
model_2 <- lm(Orangeness~poly(Carrots,2), data=babyskin)
summary(model_2)
model_2 <- lm(healing_rate~poly(age,3), data=healing)
summary(model_2)
predict(model_2, newdata=data.frame(age=c(10,20,30)))
healing$predicted_healing_rate <- predict(model_2)
head(healing)
ggplot(healing, aes(age, healing_rate)) + geom_point() + geom_smooth(method="lm") + geom_line(aes(age,predicted_healing_rate), colour="red")
UScrime <- read.table("uscrime.csv",sep="\t",header=T,comment.char="",quote="")
head(UScrime)
linearModel <- lm(Crime~M+Ed+Pol+LF+M.F+NW+U2+Ineq+Prob+Time, data=UScrime)
linearModel <- lm(Crime~M+Ed+Po1+LF+M.F+NW+U2+Ineq+Prob+Time, data=UScrime)
summary(linearModel)
vif(linearModel) #avg=1.23061
cor(UScrime[,1:10])
2.733841+4.580025+2.590702+2.363404+2.353677+3.469670+1.895208+4.492696+2.500527+2.180123/10
(2.733841+4.580025+2.590702+2.363404+2.353677+3.469670+1.895208+4.492696+2.500527+2.180123)/10
cor(UScrime[,1:10])
durbinWatsonTest(linearModel) #dw-test return no significant autocorrelation
par(mfrow=c(2,2))
par(mar=c(1,1,1,1))
plot(linearModel)
drop1(linearModel, test="F")
linearModel <- lm(Crime~M+Ed+Po1+LF+M.F+NW+U2+Ineq+Prob, data=UScrime)
summary(linearModel)
linearModel <- lm(Crime~M+Ed+Po1+LF+M.F+NW+U2+Ineq+Prob+Time, data=UScrime)
summary(linearModel) #At start : Multiple R-squared:  0.7714,	Adjusted R-squared:  0.7079
drop1(linearModel, test="F")
linearModel <- lm(Crime~M+Ed+Po1+LF+M.F+NW+U2+Ineq+Prob, data=UScrime)
summary(linearModel) #At start : Multiple R-squared:  0.7714,	Adjusted R-squared:  0.7079
drop1(linearModel, test="F")
linearModel <- lm(Crime~M+Ed+Po1+M.F+NW+U2+Ineq+Prob, data=UScrime)
summary(linearModel) #Multiple R-squared:  0.7712,	Adjusted R-squared: 0.7156
drop1(linearModel, test="F")
linearModel <- lm(Crime~M+Ed+Po1+M.F+U2+Ineq+Prob, data=UScrime)
summary(linearModel) #Multiple R-squared:  0.771,	Adjusted R-squared: 0.7228
drop1(linearModel, test="F")
linearModel <- lm(Crime~M+Ed+Po1+U2+Ineq+Prob, data=UScrime)
summary(linearModel) #Multiple R-squared:  0.7704,	Adjusted R-squared: 0.7291
drop1(linearModel, test="F")
summary(linearModel) #Multiple R-squared:  0.7659,	Adjusted R-squared: 0.7307
mtcars <- read.table("mtcars.csv",sep="\t",header=T,comment.char="",quote="",row.names = 1)
head(mtcars)
linearModel <- lm(mpg~cyl+disp+hp+drat+wt+qsec+vs+am+gear+carb, data=mtcars)
summary(linearModel)
vif(linearModel) #avg=2.915987 = (2.733841+4.580025+2.590702+2.363404+2.353677+3.469670+1.895208+4.492696+2.500527+2.180123)/10
(15.373833+21.620241+9.832037+3.374620+15.164887+7.527958+4.965873+4.648487+5.357452+7.908747)/10
cor(mtcars[,2:10])
durbinWatsonTest(linearModel) #dw-test return no significant autocorrelation
par(mfrow=c(2,2))
par(mar=c(1,1,1,1))
plot(linearModel)
drop1(linearModel, test="F")
linearModel <- lm(mpg~disp, data=mtcars)
summary(linearModel)
linearModel <- lm(mpg~hp, data=mtcars)
summary(linearModel)
drop1(linearModel, test="F")
linearModel <- lm(mpg~cyl+disp+hp+drat+wt+qsec+vs+am+gear+carb, data=mtcars)
drop1(linearModel, test="F")
model_2 <- lm(healing_rate~poly(age,3), data=healing)
summary(model_2)

x = c(6,4,3)
y = c(5,3,7)
z = c(9,3,4)
test = matrix(c(x,y,z), byrow = FALSE, nrow = 3, dimnames = list(c(1,2,3),c('x','y','z')) )
test
x <- c(4,5,1)
barplot(x)
x <- c(4,5,1)
names(x) <- c("1","2","3")
barplot(x)
x <- c(4,5,1)
names(x) <- c("1","2","3")
plot(x)
View(test)
countour(test)
x = c(6,4,3)
y = c(5,3,7)
z = c(9,3,4)
test = matrix(c(x,y,z), byrow = FALSE, nrow = 3, dimnames = list(c(1,2,3),c('x','y','z')) )
contour(test)
persp(test)
persp(test, expand 0.2)
persp(test, expand=0.2)
persp(volcano, expand=0.2)
schoolA <- subset(class_grades, class_grades$SCHOOL == "schoolA")
schoolB <- subset(class_grades, class_grades$SCHOOL == "schoolB")
library(ggplot2)
library(car)
library(pastecs)
#1 Load Gifts.csv. Remember that this data reports how many gifts different people give to themselves versus to their partner (over a 5 year period).
#In the week 4 practical, you were asked to plot a clustered error bar chart of the mean number of gifts given to oneself versus to one's partner for male and female.
#Here, you are going to create another bar chart using these variables.
#However, this time you will include gender as a facet so that there are different plots for male and female, and these plots are placed side-by-side.
#We did not discuss this in the lecture, so you will have to look at chapter 4 of the book to figure out how to do this.
#Include confidence intervals and don't include the legend denoting which color is partner vs. self (since this information will be apparent on the graph).
#Note that the opts() function, which is used in the book example, has been deprecated, so you can no longer use it to suppress the legend--however, you can use the theme() function with the same argument that opts() used to take.
setwd("~/Documents/RU/Sem2/Statistics/Week5")
Gifts <- read.table("Gifts.csv", sep="\t", header=TRUE, comment.char="", quote="")
head(Gifts)
bar_gifts <- ggplot(Gifts, aes(Recipient,Number.of.Gifts, fill = Gender))
bar_gifts + labs(y = "mean of gifts") + stat_summary(fun.y = mean, geom = "bar", colour = "Black", position="dodge") + stat_summary(fun.data = mean_cl_normal, geom = "pointrange", position=position_dodge(width=0.90)) + theme(legend.position = "none") + facet_grid(. ~ Gender)
#2 Now create a line graph with the Gifts.csv data. Each gender should have its own color/line. Include confidence intervals.
bar_gifts <- ggplot(Gifts, aes(Recipient,Number.of.Gifts, colour = Gender))
bar_gifts + labs(y = "mean of gifts") + stat_summary(fun.y = mean, geom = "point") + stat_summary(fun.y = mean, geom = "line", aes(group = Gender)) + stat_summary(fun.data = mean_cl_normal, geom = "pointrange")
#3 Load in the data from powerplant.csv.
#This data contains information on the power output of a powerplant as well as other factors effecting the powerplant's performance.
#You are going to create a grouped scatterplot.
#On the x-axis will be z-scores and on the y-axis will be power output (from the column POWER_OUTPUT).
#You will use different colors to group according to measurement type: that is, temperature versus ambient pressure.
#Include confidence intervals and a smoother.
Powerplant <- read.table("powerplant.csv", sep="\t", header=TRUE, comment.char="", quote="")
Powerplant$TEMPERATURE <- scale(Powerplant$TEMPERATURE)
Powerplant$AMBIENT_PRESSURE <- scale(Powerplant$AMBIENT_PRESSURE)
#Dont use EXHAUST_VACUUM or RELATIVE_HUMIDITY
Z_SCORES <- c(Powerplant$TEMPERATURE,Powerplant$AMBIENT_PRESSURE)
LABELS <- as.factor(c(rep("TEMPERATURE",nrow(Powerplant)), rep("AMBIENT_PRESSURE",nrow(Powerplant))))
Powerplant_new <- data.frame(Z_SCORES, LABELS,Powerplant$POWER_OUTPUT)
head(Powerplant_new)
Sample <- Powerplant_new[sample(nrow(Powerplant_new), 100), ]
Sample
Sample_plot <- ggplot(Sample, aes(x = Z_SCORES,y = Powerplant.POWER_OUTPUT, color = LABELS))
#Why missing values?
Sample_plot + geom_point()  + geom_smooth(method = "lm", se = F, aes(fill = LABELS)) + labs(y = "Power output", x = "Z-scores")
# + stat_summary(fun.data = mean_cl_normal, geom = "pointrange") doest not work:
#Warning message:
#Removed 98 rows containing missing values (geom_pointrange).
#TA said I could leave it out and that it was not in the answers of this exercise either
#Note that the TEMPERATURE and AMBIENT_PRESSURE columns contain actual scores,
#so you will first need to convert them to z-scores so that they are measured in terms of the same unit.
#Furthermore, the data set is way too big, so a scatterplot with all the datapoints would be severely overplotted.
#Take a random sample of 100 rows of the dataframe and work with this data only.
#Hint: to create the scatterplot,
#you will need to reorganize the dataframe so a single datapoint is in each row (i.e., you should end up with 200 rows)!
#What patterns do you observe in the data?
#There is a negative correlation between temperature and power output and
#a possitive correlation between ambient pressure and power output
#4 Load in the data from class_grades.csv. This dataframe contains grades from 4 different classes.
#Crucially, the classes are "nested" inside of schools: class1 and class2 are nested in schoolA, and class3 and class4 are nested in schoolB.
#In other words, this means that the grades for classes 1 and 2 together make up the grades for schoolA.
#Create a boxplot comparing the medians and dispersions of the two schools.
class_grades <- read.table("class_grades.csv", sep="\t", header=TRUE, comment.char="", quote="")
head(class_grades)
school_boxplot <- ggplot(class_grades, aes(SCHOOL, GRADE))
school_boxplot + geom_boxplot()
#5 Assess the normality of the grades from the three schools by looking at graphs (the 2 types discussed in lecture;
#for histograms, experiment with different binwidths to find one that looks good);
#by inspecting the skew and kurtosis values;
#and by performing a statistical test for normality.
#In addition, using a statistical test, assess the homogeneity of variance between the two schools.
#For the statistical tests, provide a proper reporting of the results.
schoolA <- subset(class_grades, class_grades$SCHOOL == "schoolA")
schoolB <- subset(class_grades, class_grades$SCHOOL == "schoolB")
schoolA_historgram <- ggplot(schoolA,aes(GRADE)) + geom_histogram(aes(y=..density..), binwidth = 0.8, colour = "black", fill = "white")+labs(x="Rating", y="Density")+theme(legend.position = "none");
mean_and_sd_A <- list(mean=mean(schoolA$GRADE,na.rm=TRUE),sd=sd(schoolA$GRADE,na.rm=TRUE))
schoolA_historgram + stat_function(fun=dnorm,args=mean_and_sd_A,colour="black", size=1)
schoolB_historgram <- ggplot(schoolB,aes(GRADE)) + geom_histogram(aes(y=..density..), binwidth = 0.8, colour = "black", fill = "white")+labs(x="Rating", y="Density")+theme(legend.position = "none");
mean_and_sd_B <- list(mean=mean(schoolB$GRADE,na.rm=TRUE),sd=sd(schoolB$GRADE,na.rm=TRUE))
schoolB_historgram + stat_function(fun=dnorm,args=mean_and_sd_B,colour="black", size=1)
stat.desc(schoolA$GRADE, basic = FALSE, norm = TRUE)
class_grades <- read.table("class_grades.csv", sep="\t", header=TRUE, comment.char="", quote="")
head(class_grades)
school_boxplot <- ggplot(class_grades, aes(SCHOOL, GRADE))
school_boxplot + geom_boxplot()
